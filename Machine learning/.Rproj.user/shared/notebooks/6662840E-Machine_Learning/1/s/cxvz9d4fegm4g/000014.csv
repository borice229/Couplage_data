"0","# Définition de la fonction avec ajout de bruit"
"0","Generate_output_with_noise <- function(N, a, b, c, U0) {"
"0","  U <- numeric(N + 1)"
"0","  U[1] <- U0"
"0","  "
"0","  for (n in 1:N) {"
"0","    # Calcul de U[n+1] avec ajout de bruit gaussien"
"0","    U[n + 1] <- a * U[n]^c + b + rnorm(1, mean = 0, sd = 1)"
"0","  }"
"0","  "
"0","  return(U)"
"0","}"
"0",""
"0",""
"0","# Générer une base de données avec les valeurs de a, b, c et U[0], U[1], ..., U[100]"
"0","base_brutee <- data.frame(matrix(ncol = N + 4, nrow = M))  # Base vide (n lignes, N+4 colonnes)"
"0",""
"0","# Noms des colonnes : a, b, c, U[0], ..., U[100]"
"0","colnames(base_brutee) <- c(""a"", ""b"", ""c"", paste0(""U"", 0:N))"
"0",""
"0","# Remplir la base avec les valeurs simulées de a, b, c et les valeurs de U"
"0","for (i in 1:M) {"
"0","  base_brutee[i, 1] <- sim_a[i]  # Valeur de a"
"0","  base_brutee[i, 2] <- sim_b[i]  # Valeur de b"
"0","  base_brutee[i, 3] <- sim_c[i]  # Valeur de c"
"0","  base_brutee[i, 4] <- sim_Uo[i]  # Valeur de Uo"
"0","  U_values_bruité <- Generate_output_with_noise(N, sim_a[i], sim_b[i], sim_c[i], sim_Uo[i])  # Générer U[0] à U[100] bruité  "
"0","  base_brutee[i, 4:(N + 4)] <- U_values_bruité  # Remplir les colonnes U[0] à U[100]"
"0","}"
"0",""
"0","base_brutee %>%"
"0","  mutate(Individu = 1:M) %>%               # Ajouter la colonne 'Individu'"
"0","  melt(id.vars = c(""a"", ""b"", ""c"", ""Individu""), "
"0","       variable.name = ""Iteration"", "
"0","       value.name = ""U"") %>%                # Restructurer le dataframe"
"0","  mutate(Iteration = as.numeric(gsub(""U"", """", Iteration))) %>%  # Convertir la colonne 'Iteration' en numérique"
"0","  ggplot(aes(x = Iteration, y = U, color = factor(Individu))) + # Graphique ggplot"
"0","  geom_line(size = 1) +                     # Tracer les courbes pour chaque individu"
"0","  labs(title = ""Évolution de U[n] bruité pour chaque individu"","
"0","       x = ""Itération (N)"", "
"0","       y = ""Valeur de U[N]"","
"0","       color = ""Individu"") +"
"0","  theme_minimal()    "
"0",""
